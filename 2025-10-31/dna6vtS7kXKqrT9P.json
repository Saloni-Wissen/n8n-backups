{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Update rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Cohere/HUMANA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evicore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Session": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update rows in a table": {
      "main": [
        [
          {
            "node": "Create Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-22T13:32:11.667Z",
  "id": "dna6vtS7kXKqrT9P",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Preauth_agent-demo",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "preauth",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -944,
        48
      ],
      "id": "b09f2207-73dd-403f-b703-8e4b095e605b",
      "name": "Webhook",
      "webhookId": "ea8c66c3-9288-4380-a66b-710743210e25"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f19e7756-d450-4b46-85d4-6338b143fa83",
              "leftValue": "={{ $('Webhook').item.json.body.json_data.payername}}",
              "rightValue": "HUMANA",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -320,
        48
      ],
      "id": "f68f70d0-e15a-437e-a962-956a17ca126b",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.2.76.5:8080/api/v1/agents",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"session_id\":\"{{ $json.session_id }}\",\n \"task\":\"never use the execute_js tool never never , Go to https://www.evicore.com/provider enter username: kanchanchowdhary and password: Wissen@2025@ then select i agree  and after login in  click on send pin and then wait for mfa code given by human, so call the MFA Code controller and wait on the same page, after enering the pin navigate to home page then click on request a auth and then fill the data from the json provided as {{ $('Webhook').item.json.body.json_data.keys() }} with values as {{ $('Webhook').item.json.body.json_data.values() }}.Rules to follow don't use the execute_js tool as the website is iframe based so execute_js tool is probhiated and use mouse click and execute one action at a time always  First select Gastroenterology and then click Continue and after that Select the Provider details of the Given NPI and then click Continue, then select healthcare plane cigna in this step don not send multiple actions as the website is completely iframe based so after each click or action it will refresh to updatae data so try to send one action at a time and then wait for 15 seconds before clicking on continue, and after that select the address type don't pass full address pass in chunks and  then only click on continue fax and continue and then fill the date in the pop up and then click on submit , after clicking on submit only fill the patient detials and  click eligibilty lookup and then click on select and then click on continue and then fill Primary Diagnosis code and then click on Lookup and click on continue and then select NO on the pop up and fill the NPI  and click on Lookup site and then click on second select option and then click on continue and then click on I acknowledge then click on Confirm and continue and then click on YES and then fill the CPT code as 43239 then click submit now the next page is the patient summary popup so call the extract_information tool before doing anything always do this . STRICTLY stop executing whenever you see the summary page and before that always call the extract_information tool always means always and now your task is completed don't click continue \",\n  \"case_ref_id\":\"{{ $('Webhook').item.json.body.case_ref_id }}\"\n}",
        "options": {
          "timeout": 10000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        160
      ],
      "id": "0e4d28b1-131b-46d2-aae4-4428894bf764",
      "name": "Evicore",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.2.76.5:8080/api/v1/sessions",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -512,
        48
      ],
      "id": "9596cffc-a0a4-4fc9-8499-eb9800c0bbd3",
      "name": "Create Session",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.2.76.5:8080/api/v1/agents",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"session_id\":\"{{ $json.session_id }}\",\n\"task\":\"Go to https://login.coherehealth.com/ and login with username:kanchan.chowdhary@gialliance.com and password:Wissen@04082025 and start preauth by filling these details with given JSON. as {{ $('Webhook').item.json.body.json_data.keys() }} with values as {{ $('Webhook').item.json.body.json_data.values() }} Stop executing at the review page and don't submit and below are the instructions you should follow. first page is having preauth button click there enter the details and continue then you go to the next page bydefault continue button is disabled you have to fill the details first , first enter the date of birth then there is a drop down input field for the dx code click on that and wait for 3 second iframe will load then enter the code and select with mouse key not with enter key after that there is cpt code dropdown enter first cpt and select with mouse key and then again same for second, don't enter the cpt like collectively 2232323,2323232 this will not work fill individually and select by mouse key , now continue button will there press and go to the next page in the next page you have to first select office from the place of service dropdown menu then there is a field of ordering provider npi it is a dropdown click on it and wait for load then enter the details and select the appropriate value from there in this also address select the appropritae value for the provider npi address  provided then please click on the checkbox for attending provider ther ther is dropdown of performing facility first click there and wait to load and enter details and select with mouse key and same for the address provided enter therer then only the continue button will be enabled then click on the continue then on next page enter the end date as 12/12/2025 and continue with the codes then you will receive the file upload upload the file and click on continue and when you will see questionair page now ask human for help here by giving him the question one by one  and after questionair page there is a patient summary so extract that and pass to human and don't submit and your task is completed\",\n\"case_ref_id\":\"{{ $('Webhook').item.json.body.case_ref_id}}\"\n}",
        "options": {
          "timeout": 10000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -32,
        -64
      ],
      "id": "36e83800-8c02-4a6c-b37a-148871ab2ae9",
      "name": "Cohere/HUMANA",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "iks_schema_dev",
          "mode": "list",
          "cachedResultName": "iks_schema_dev"
        },
        "table": {
          "__rl": true,
          "value": "prior_auth_case_request",
          "mode": "list",
          "cachedResultName": "prior_auth_case_request"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sequence_no": 0,
            "total_count": 0,
            "status": "running",
            "id": "={{ $('Webhook').item.json.body.case_ref_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "batch_id",
              "displayName": "batch_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "case_id",
              "displayName": "case_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "request_id",
              "displayName": "request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "provider_id",
              "displayName": "provider_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payer_id",
              "displayName": "payer_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "reference_number",
              "displayName": "reference_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "appointment_id",
              "displayName": "appointment_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "person_number",
              "displayName": "person_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "patient_name",
              "displayName": "patient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "patient_dob",
              "displayName": "patient_dob",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date_of_service",
              "displayName": "date_of_service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "visit_reason",
              "displayName": "visit_reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "speciality",
              "displayName": "speciality",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sequence_no",
              "displayName": "sequence_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "total_count",
              "displayName": "total_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "vendor",
              "displayName": "vendor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hitl_status",
              "displayName": "hitl_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -704,
        48
      ],
      "id": "5c5e3b88-3630-44c6-8cac-6e11bf930d07",
      "name": "Update rows in a table",
      "executeOnce": false,
      "credentials": {
        "postgres": {
          "id": "bV9Rknmgj3x2PKaZ",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backups",
  "repo_owner": "Saloni-Wissen",
  "repo_path": "2025-10-31/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-22T13:32:11.667Z",
      "updatedAt": "2025-10-22T13:32:11.667Z",
      "role": "workflow:owner",
      "workflowId": "dna6vtS7kXKqrT9P",
      "projectId": "7loRaf8YeINnKgtz"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-30T15:14:41.527Z",
  "versionId": "a77c64df-2aa9-4ef1-8a88-c2d8901927fa"
}